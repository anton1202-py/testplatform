services:
  analytical-db:
    image: postgres:16.2
    command: -c shared_buffers=256MB
    volumes:
      - analytical-db:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  analytical-platform-web:
    build: .
    env_file:
      - .env
    ports:
      - "${APPLICATION_PORT}:8000"
    restart: unless-stopped
    environment:
      - DB_HOST
      - DB
      - DB_PORT
      - DB_USER
    depends_on:
      - analytical-db
    command: ./entrypoint.sh

  redis:
    image: redis:6-alpine

  worker:
    build: .
    command: ./entrypoint_worker.sh
    env_file:
      - .env
    depends_on:
      - redis
      - analytical-db
    restart: unless-stopped

  scheduler:
    build: .
    command: ./entrypoint_scheduler.sh
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped

  analytical-platform-ui:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    ports:
      - "8801:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  analytical-db:
