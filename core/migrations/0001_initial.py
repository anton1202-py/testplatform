# Generated by Django 5.1 on 2024-08-25 16:04

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('platform_type', models.IntegerField(choices=[(0, 'Wildberries'), (1, 'Яндекс Маркет'), (2, 'МегаМаркет'), (3, 'OZON'), (4, 'Мой склад')], default=0, verbose_name='Платформа')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Адрес электронной почты')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания пользователя')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Последняя дата обновления информации о пользователе')),
                ('is_active', models.BooleanField(default=True, verbose_name='Флаг активного (не заблокированного) аккаунта')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли админом')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь аналитической платформы',
                'verbose_name_plural': 'Пользователи аналитической платформы',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('authorization_fields', models.JSONField(default=core.models.default_authorization_fields, verbose_name='Описание полей в виде json')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, которому принадлежит аккаунт')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='core.platform', verbose_name='Платформа, для которой заведен аккаунт')),
            ],
            options={
                'verbose_name': 'Аккаунт пользователя на платформе',
                'verbose_name_plural': 'Аккаунты пользователей на платформе',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('brand', models.TextField(blank=True, null=True, verbose_name='Бренд')),
                ('sku', models.CharField(max_length=255, verbose_name='Идентификатор товара на платформе')),
                ('vendor', models.CharField(max_length=255, verbose_name='Артикул')),
                ('barcode', models.CharField(max_length=255, verbose_name='Баркод')),
                ('has_manual_connection', models.BooleanField(default=False, verbose_name='Связь создана в ручную')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='core.account', verbose_name='Аккаунт к которому относятся продукты')),
                ('connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='connections', to='core.product')),
            ],
            options={
                'verbose_name': 'Товар на платформе',
                'verbose_name_plural': 'Товары на платформе',
            },
        ),
    ]
